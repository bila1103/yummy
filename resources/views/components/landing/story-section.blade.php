<div class="story-container">
    <!-- Story List -->
    <div class="story-list mb-4">
        <h3 class="mb-3 fw-bold">Yummy Story</h3>
        <div class="splide" id="story-slider">
            <div class="splide__track">
                <ul class="splide__list">
                    @foreach ($stories as $story)
                        <li class="splide__slide">
                            <div class="story-item" data-story-id="{{ $story['id'] }}"
                                data-story-index="{{ $loop->index }}">
                                <div class="story-circle">
                                    <img loading="lazy" src="{{ $story['image'] }}" alt="{{ $story['title'] }}" class="story-image">
                                </div>
                                <span class="story-title">{{ $story['title'] }}</span>
                            </div>
                        </li>
                    @endforeach
                </ul>
            </div>
        </div>
    </div>
</div>

<!-- Story Modal -->
<div class="modal fade" id="storyModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content bg-black">
            <div class="modal-header border-0 position-absolute w-100" style="z-index: 1000;">
                <div class="container-fluid">
                    <!-- Progress Bars -->
                    <div class="progress-container mb-3">
                        <div class="progress-bars d-flex gap-1" id="progressBarsContainer">
                            <!-- Progress bars will be generated by JavaScript -->
                        </div>
                    </div>

                    <!-- Story Header -->
                    <div class="d-flex align-items-center justify-content-between text-white">
                        <div class="d-flex align-items-center">
                            <div class="story-header-avatar me-2">
                                <img loading="lazy" src="" alt="" class="rounded-circle"
                                    width="30" height="30" id="storyAvatar">
                            </div>
                            <span class="fw-bold" id="storyName"></span>
                        </div>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                    </div>
                </div>
            </div>

            <div class="modal-body p-0 position-relative">
                <!-- Story Content Container -->
                <div class="story-content-container">
                    <!-- Previous Story (Left) -->
                    <div class="story-slide story-slide-prev">
                        <img loading="lazy" src="" alt="" class="story-image-full">
                    </div>

                    <!-- Current Story (Center) -->
                    <div class="story-slide story-slide-current active">
                        <img loading="lazy" src="" alt="" class="story-image-full">
                    </div>

                    <!-- Next Story (Right) -->
                    <div class="story-slide story-slide-next">
                        <img loading="lazy" src="" alt="" class="story-image-full">
                    </div>
                </div>

                <!-- Navigation Areas (Invisible) -->
                <div class="story-nav-area story-nav-area-left" id="prevArea"></div>
                <div class="story-nav-area story-nav-area-right" id="nextArea"></div>

                <!-- Navigation Arrows -->
                <button class="story-nav story-nav-prev" id="prevStory">
                    <i class="ri ri-arrow-left-s-line"></i>
                </button>
                <button class="story-nav story-nav-next" id="nextStory">
                    <i class="ri ri-arrow-right-s-line"></i>
                </button>

                <!-- Story Info Card -->
                <div class="story-info-card">
                    <div class="card bg-white">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-start mb-2">
                                <h6 class="card-title mb-0" id="storyTitle"></h6>
                                <div class="d-flex align-items-center">
                                    <i class="ri-star-fill text-warning me-1"></i>
                                    <span class="text-muted" id="storyRating"></span>
                                </div>
                            </div>

                            <div class="d-flex align-items-center text-muted mb-3">
                                <i class="ri-time-line me-1"></i>
                                <span id="storyTime" class="me-3"></span>
                                <i class="ri-users-line me-1"></i>
                                <span id="storyServing" class="ri-bowl-line me-3"></span>
                                <i class="ri-money-dollar-box-line me-1"></i>
                                <span id="storyPrice"></span>
                            </div>

                            <!-- Recipe Count -->
                            <div class="recipe-count mb-3">
                                {{-- <span class="text-muted">Jumlah Recook</span> --}}
                                <div class="d-flex align-items-center mt-1">
                                    <div class="recipe-avatars" id="recipeAvatars">
                                        <!-- Avatar images will be added by JavaScript -->
                                    </div>
                                </div>
                            </div>

                            <a href="" class="btn btn-primary w-100" id="viewRecipeBtn">Lihat Resep</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@push('styles')
    <style>
        .story-container {
            margin: 20px 0;
            margin-bottom: 300px;
        }

        .story-list {
            padding: 0 15px;
        }

        .story-item {
            text-align: center;
            cursor: pointer;
            margin-right: 15px;
        }

        .story-circle {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            border: 3px solid #ff6b35;
            padding: 3px;
            margin-bottom: 8px;
            position: relative;
            overflow: hidden;
        }

        .story-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 50%;
        }

        .story-title {
            font-size: 12px;
            color: #333;
            display: block;
            max-width: 80px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        /* Modal Styles */
        .modal-content {
            background: #000;
        }

        .progress-container {
            padding-top: 20px;
        }

        .progress-bars {
            height: 3px;
        }

        .progress-bar-item {
            flex: 1;
            height: 100%;
            background: rgba(123, 123, 123, 0.3);
            border-radius: 2px;
            position: relative;
            overflow: hidden;
        }

        .progress-bar-fill {
            height: 100%;
            width: 0%;
            background: #f8991d;
            border-radius: 2px;
            transition: width 0.1s linear;
        }

        .story-content-container {
            position: relative;
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
        }

        .story-slide {
            position: absolute;
            width: 100%;
            height: 100%;
            transition: transform 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .story-slide-prev {
            transform: translateX(-100%) scale(0.8);
            opacity: 0.3;
            z-index: 1;
        }

        .story-slide-current {
            transform: translateX(0) scale(1);
            opacity: 1;
            z-index: 2;
        }

        .story-slide-next {
            transform: translateX(100%) scale(0.8);
            opacity: 0.3;
            z-index: 1;
        }

        .story-image-full {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .story-nav-area {
            position: absolute;
            top: 0;
            width: 50%;
            height: 100%;
            z-index: 999;
            cursor: pointer;
        }

        .story-nav-area-left {
            left: 0;
        }

        .story-nav-area-right {
            right: 0;
        }

        .story-nav {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            background: rgba(255, 255, 255, 0.1);
            border: none;
            color: white;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            z-index: 1000;
            cursor: pointer;
            transition: background 0.3s ease;
            opacity: 0.7;
        }

        .story-nav:hover {
            background: rgba(255, 255, 255, 0.2);
            opacity: 1;
        }

        .story-nav-prev {
            left: 20px;
        }

        .story-nav-next {
            right: 20px;
        }

        .story-info-card {
            position: absolute;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            width: 90%;
            max-width: 400px;
            z-index: 1000;
        }

        .story-info-card .card {
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        }

        .recipe-avatars {
            display: flex;
            align-items: center;
        }

        .recipe-avatar {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            border: 2px solid white;
            margin-right: -8px;
            object-fit: cover;
        }

        .recipe-count-text {
            margin-left: 15px;
            font-weight: bold;
            color: #333;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .story-info-card {
                width: 95%;
            }

            .story-circle {
                width: 70px;
                height: 70px;
            }

            .story-title {
                font-size: 11px;
                max-width: 70px;
            }

            .story-nav {
                display: none;
            }
        }
    </style>
@endpush

@push('scripts')
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize Splide
            const splide = new Splide('#story-slider', {
                type: 'loop',
                perPage: 8,
                perMove: 1,
                pagination: false,
                arrows: false,
                gap: '10px',
                breakpoints: {
                    1024: {
                        perPage: 6,
                    },
                    768: {
                        perPage: 5,
                    },
                    480: {
                        perPage: 4,
                    }
                }
            });

            splide.mount();

            // Story data
            const storiesData = @json($stories);
            let currentStoryIndex = 0;
            let storyTimer;
            let storyDuration = 5000; // 5 seconds per story
            let isPlaying = false;
            let currentProgress = 0;

            // Story modal elements
            const storyModal = new bootstrap.Modal(document.getElementById('storyModal'));
            const modalElement = document.getElementById('storyModal');

            // Progress elements
            const progressBarsContainer = document.getElementById('progressBarsContainer');

            // Story slide elements
            const storySlides = {
                prev: document.querySelector('.story-slide-prev'),
                current: document.querySelector('.story-slide-current'),
                next: document.querySelector('.story-slide-next')
            };

            // Click event for story items
            document.querySelectorAll('.story-item').forEach((item) => {
                item.addEventListener('click', function() {
                    const storyIndex = parseInt(this.getAttribute('data-story-index'));
                    currentStoryIndex = storyIndex;
                    openStory();
                });
            });

            // Open story function
            function openStory() {

                // Setup progress bars
                setupProgressBars();

                // Load initial stories (prev, current, next)
                loadStorySlides();

                // Load story info
                loadStoryInfo();

                // Show modal
                storyModal.show();

                // Start story timer after modal is shown
                setTimeout(() => {
                    startStoryTimer();
                }, 500);
            }

            // Setup progress bars
            function setupProgressBars() {
                progressBarsContainer.innerHTML = '';

                storiesData.forEach((story, index) => {
                    const progressBar = document.createElement('div');
                    progressBar.className = 'progress-bar-item';
                    progressBar.innerHTML = '<div class="progress-bar-fill"></div>';
                    progressBarsContainer.appendChild(progressBar);
                });

            }

            // Load story slides (prev, current, next)
            function loadStorySlides() {
                const totalStories = storiesData.length;

                // Calculate indices
                const prevIndex = currentStoryIndex === 0 ? totalStories - 1 : currentStoryIndex - 1;
                const nextIndex = currentStoryIndex === totalStories - 1 ? 0 : currentStoryIndex + 1;

                // Load images
                const prevImg = storySlides.prev.querySelector('.story-image-full');
                const currentImg = storySlides.current.querySelector('.story-image-full');
                const nextImg = storySlides.next.querySelector('.story-image-full');

                if (prevImg) {
                    prevImg.src = storiesData[prevIndex].image;
                    prevImg.alt = storiesData[prevIndex].title;
                }

                if (currentImg) {
                    currentImg.src = storiesData[currentStoryIndex].image;
                    currentImg.alt = storiesData[currentStoryIndex].title;
                }

                if (nextImg) {
                    nextImg.src = storiesData[nextIndex].image;
                    nextImg.alt = storiesData[nextIndex].title;
                }

            }

            // Load story info
            function loadStoryInfo() {
                const story = storiesData[currentStoryIndex];
                if (!story) return;

                document.getElementById('storyTitle').textContent = story.title;
                document.getElementById('storyRating').textContent = `(${story.rating})`;
                document.getElementById('storyTime').textContent = story.cooking_time;
                document.getElementById('storyServing').textContent = `${story.serving_min} - ${story.serving_max} Porsi`;
                document.getElementById('storyPrice').textContent = story.price;
                document.getElementById('storyName').textContent = story.user.name;
                document.getElementById('viewRecipeBtn').href = `/resep/${story.slug}`;
                const storyAvatar = document.getElementById('storyAvatar');
                storyAvatar.src = story.user.avatar;
                storyAvatar.alt = story.user.name ;

                // Update recipe avatars
                const avatarsContainer = document.getElementById('recipeAvatars');
                avatarsContainer.innerHTML = '';

                // story.recook_avatars.forEach((avatar, index) => {
                //     if (index < 3) {
                //         const img = document.createElement('img');
                //         img.src = avatar;
                //         img.className = 'recipe-avatar';
                //         img.alt = 'Recipe Avatar';
                //         avatarsContainer.appendChild(img);
                //     }
                // });

                // if (story.recook_avatars.length > 3) {
                //     const countSpan = document.createElement('span');
                //     countSpan.className = 'recipe-count-text';
                //     countSpan.textContent = `+${story.recook_avatars.length - 3}`;
                //     avatarsContainer.appendChild(countSpan);
                // }

            }

            // Start story timer
            function startStoryTimer() {
                if (isPlaying) return;

                isPlaying = true;
                currentProgress = 0;

                const progressIncrement = 100 / (storyDuration / 50); // Update every 50ms

                storyTimer = setInterval(() => {
                    if (isPlaying) {
                        currentProgress += progressIncrement;
                        updateProgressBar(currentProgress);

                        if (currentProgress >= 100) {
                            nextStory();
                        }
                    }
                }, 50);
            }

            // Stop story timer
            function stopStoryTimer() {
                if (storyTimer) {
                    clearInterval(storyTimer);
                    storyTimer = null;
                }
                isPlaying = false;
            }

            // Resume story timer
            function resumeStoryTimer() {
                if (!isPlaying && currentProgress < 100) {
                    startStoryTimer();
                }
            }

            // Update progress bar
            function updateProgressBar(progress) {
                const progressBars = progressBarsContainer.querySelectorAll('.progress-bar-fill');

                progressBars.forEach((bar, index) => {
                    if (index < currentStoryIndex) {
                        bar.style.width = '100%';
                    } else if (index === currentStoryIndex) {
                        bar.style.width = `${Math.min(progress, 100)}%`;
                    } else {
                        bar.style.width = '0%';
                    }
                });
            }

            // Next story
            function nextStory() {
                stopStoryTimer();

                if (currentStoryIndex < storiesData.length - 1) {
                    currentStoryIndex++;
                } else {
                    currentStoryIndex = 0;
                }


                // Update slides
                loadStorySlides();
                loadStoryInfo();

                // Reset and start timer
                currentProgress = 0;
                updateProgressBar(0);

                setTimeout(() => {
                    startStoryTimer();
                }, 300);
            }

            // Previous story
            function prevStory() {
                stopStoryTimer();

                if (currentStoryIndex > 0) {
                    currentStoryIndex--;
                } else {
                    currentStoryIndex = storiesData.length - 1;
                }


                // Update slides
                loadStorySlides();
                loadStoryInfo();

                // Reset and start timer
                currentProgress = 0;
                updateProgressBar(0);

                setTimeout(() => {
                    startStoryTimer();
                }, 300);
            }

            // Navigation events
            document.getElementById('nextStory').addEventListener('click', nextStory);
            document.getElementById('prevStory').addEventListener('click', prevStory);
            document.getElementById('prevArea').addEventListener('click', prevStory);
            document.getElementById('nextArea').addEventListener('click', nextStory);

            // Pause/resume on modal interaction
            modalElement.addEventListener('mousedown', function() {
                stopStoryTimer();
            });

            modalElement.addEventListener('mouseup', function() {
                setTimeout(() => {
                    resumeStoryTimer();
                }, 100);
            });

            // Touch events for mobile
            let touchStartX = 0;
            let touchEndX = 0;

            modalElement.addEventListener('touchstart', function(e) {
                touchStartX = e.changedTouches[0].screenX;
                stopStoryTimer();
            });

            modalElement.addEventListener('touchend', function(e) {
                touchEndX = e.changedTouches[0].screenX;

                const diff = touchStartX - touchEndX;

                if (Math.abs(diff) > 50) { // Minimum swipe distance
                    if (diff > 0) {
                        nextStory(); // Swipe left = next
                    } else {
                        prevStory(); // Swipe right = previous
                    }
                } else {
                    setTimeout(() => {
                        resumeStoryTimer();
                    }, 100);
                }
            });

            // Clear timer when modal is closed
            modalElement.addEventListener('hidden.bs.modal', function() {
                stopStoryTimer();
                currentProgress = 0;
            });

            // View recipe button
            document.getElementById('viewRecipeBtn').addEventListener('click', function() {
                const currentStory = storiesData[currentStoryIndex];
            });

            // Keyboard navigation
            document.addEventListener('keydown', function(e) {
                if (modalElement.classList.contains('show')) {
                    if (e.key === 'ArrowRight') {
                        nextStory();
                    } else if (e.key === 'ArrowLeft') {
                        prevStory();
                    } else if (e.key === 'Escape') {
                        storyModal.hide();
                    }
                }
            });
        });
    </script>
@endpush
